/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimpleSwap,
  SimpleSwapInterface,
} from "../../contracts/SimpleSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountAIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBIn",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenA",
    outputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenB",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018cc380380620018cc833981016040819052620000349162000225565b6040518060400160405280600a815260200169053696d706c65537761760b41b81525060405180604001604052806002815260200161535360f01b815250816003908162000083919062000302565b50600462000092828262000302565b5050506001600160a01b038216620000fc5760405162461bcd60e51b815260206004820152602260248201527f53696d706c65537761703a20544f4b454e415f49535f4e4f545f434f4e54524160448201526110d560f21b60648201526084015b60405180910390fd5b6001600160a01b0381166200015f5760405162461bcd60e51b815260206004820152602260248201527f53696d706c65537761703a20544f4b454e425f49535f4e4f545f434f4e54524160448201526110d560f21b6064820152608401620000f3565b806001600160a01b0316826001600160a01b031603620001d65760405162461bcd60e51b815260206004820152602b60248201527f53696d706c65537761703a20544f4b454e415f544f4b454e425f4944454e544960448201526a43414c5f4144445245535360a81b6064820152608401620000f3565b600580546001600160a01b039384166001600160a01b03199182161790915560068054929093169116179055620003ce565b80516001600160a01b03811681146200022057600080fd5b919050565b600080604083850312156200023957600080fd5b620002448362000208565b9150620002546020840162000208565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200028857607f821691505b602082108103620002a957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002fd57600081815260208120601f850160051c81016020861015620002d85750805b601f850160051c820191505b81811015620002f957828155600101620002e4565b5050505b505050565b81516001600160401b038111156200031e576200031e6200025d565b62000336816200032f845462000273565b84620002af565b602080601f8311600181146200036e5760008415620003555750858301515b600019600386901b1c1916600185901b178555620002f9565b600085815260208120601f198616915b828110156200039f578886015182559484019460019091019084016200037e565b5085821015620003be5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114ee80620003de6000396000f3fe608060405234801561001057600080fd5b50600436106100eb5760003560e01c806370a082311161009257806370a08231146101b957806395d89b41146101e25780639c8f9f23146101ea5780639cd441da146101fd578063a457c2d71461022b578063a9059cbb1461023e578063ae0ba2fb14610251578063dd62ed3e14610262578063df791e501461027557600080fd5b806306fdde03146100f05780630902f1ac1461010e578063095ea7b31461012a5780630f0148ea1461014d57806318160ddd1461017257806323b872dd14610184578063313ce5671461019757806339509351146101a6575b600080fd5b6100f8610288565b60405161010591906111f0565b60405180910390f35b6007546008545b60408051928352602083019190915201610105565b61013d610138366004611255565b61031a565b6040519015158152602001610105565b6006546001600160a01b03165b6040516001600160a01b039091168152602001610105565b6002545b604051908152602001610105565b61013d61019236600461127f565b610334565b60405160128152602001610105565b61013d6101b4366004611255565b610358565b6101766101c73660046112bb565b6001600160a01b031660009081526020819052604090205490565b6100f861037a565b6101156101f83660046112dd565b610389565b61021061020b3660046112f6565b6105bd565b60408051938452602084019290925290820152606001610105565b61013d610239366004611255565b610809565b61013d61024c366004611255565b610884565b6005546001600160a01b031661015a565b610176610270366004611318565b610892565b61017661028336600461127f565b6108bd565b6060600380546102979061134b565b80601f01602080910402602001604051908101604052809291908181526020018280546102c39061134b565b80156103105780601f106102e557610100808354040283529160200191610310565b820191906000526020600020905b8154815290600101906020018083116102f357829003601f168201915b5050505050905090565b600033610328818585610c8a565b60019150505b92915050565b600033610342858285610daf565b61034d858585610e29565b506001949350505050565b60003361032881858561036b8383610892565b6103759190611395565b610c8a565b6060600480546102979061134b565b60075460085460009182918261039e60025490565b90506000861180156103b05750808611155b6104135760405162461bcd60e51b815260206004820152602960248201527f53696d706c65537761703a20494e53554646494349454e545f4c495155494449604482015268151657d0955493915160ba1b60648201526084015b60405180910390fd5b8061041e87856113a8565b61042891906113bf565b94508061043587846113a8565b61043f91906113bf565b9350846007600082825461045391906113e1565b92505081905550836008600082825461046c91906113e1565b909155505060055460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906104a390339089906004016113f4565b6020604051808303816000875af11580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e6919061140d565b5060065460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061051990339088906004016113f4565b6020604051808303816000875af1158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c919061140d565b506105673087610884565b506105723087610fbb565b604080518681526020810186905290810187905233907f59c3a0b60c6ab7deb62e1440c9e72441db6db7dfe514dba8cb18e60c0d896efa9060600160405180910390a2505050915091565b600080600080851180156105d15750600084115b6105ed5760405162461bcd60e51b815260040161040a9061142f565b60075460085460006105fe60025490565b9050806000036106275787955086945061062061061b86886113a8565b6110d3565b9350610692565b61063183886113a8565b61063b838a6113a8565b1161065f578795508261064e83886113a8565b61065891906113bf565b945061067a565b8161066a84896113a8565b61067491906113bf565b95508694505b8261068582886113a8565b61068f91906113bf565b93505b85600760008282546106a49190611395565b9250508190555084600860008282546106bd9190611395565b90915550506005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906106f690339030908b90600401611474565b6020604051808303816000875af1158015610715573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610739919061140d565b506006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061076e90339030908a90600401611474565b6020604051808303816000875af115801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b1919061140d565b506107bc3385611143565b604080518781526020810187905290810185905233907fbeb3885786d637a474cbc287c0a44587231633a077f0bd30354d5a4b18996fce9060600160405180910390a25050509250925092565b600033816108178286610892565b9050838110156108775760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161040a565b61034d8286868403610c8a565b600033610328818585610e29565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546000906001600160a01b03858116911614806108e957506006546001600160a01b038581169116145b6109355760405162461bcd60e51b815260206004820152601c60248201527f53696d706c65537761703a20494e56414c49445f544f4b454e5f494e00000000604482015260640161040a565b6005546001600160a01b038481169116148061095e57506006546001600160a01b038481169116145b6109aa5760405162461bcd60e51b815260206004820152601d60248201527f53696d706c65537761703a20494e56414c49445f544f4b454e5f4f5554000000604482015260640161040a565b826001600160a01b0316846001600160a01b031603610a0b5760405162461bcd60e51b815260206004820152601d60248201527f53696d706c65537761703a204944454e544943414c5f41444452455353000000604482015260640161040a565b81600003610a2b5760405162461bcd60e51b815260040161040a9061142f565b6007546008546000610a3d82846113a8565b6005549091506001600160a01b0390811690881603610aa5578460076000828254610a689190611395565b9091555050600754610a7b6001826113e1565b610a859083611395565b610a8f91906113bf565b6008819055610a9e90836113e1565b9350610af0565b8460086000828254610ab79190611395565b9091555050600854610aca6001826113e1565b610ad49083611395565b610ade91906113bf565b6007819055610aed90846113e1565b93505b83600003610b4f5760405162461bcd60e51b815260206004820152602660248201527f53696d706c65537761703a20494e53554646494349454e545f4f55545055545f604482015265105353d5539560d21b606482015260840161040a565b6040516323b872dd60e01b81526001600160a01b038816906323b872dd90610b7f90339030908a90600401611474565b6020604051808303816000875af1158015610b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc2919061140d565b5060405163a9059cbb60e01b81526001600160a01b0387169063a9059cbb90610bf190339088906004016113f4565b6020604051808303816000875af1158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c34919061140d565b5060408051868152602081018690526001600160a01b0380891692908a169133917fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062910160405180910390a45050509392505050565b6001600160a01b038316610cec5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161040a565b6001600160a01b038216610d4d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161040a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610dbb8484610892565b90506000198114610e235781811015610e165760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161040a565b610e238484848403610c8a565b50505050565b6001600160a01b038316610e8d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161040a565b6001600160a01b038216610eef5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161040a565b6001600160a01b03831660009081526020819052604090205481811015610f675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161040a565b6001600160a01b0384811660008181526020818152604080832087870390559387168083529184902080548701905592518581529092600080516020611499833981519152910160405180910390a3610e23565b6001600160a01b03821661101b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161040a565b6001600160a01b0382166000908152602081905260409020548181101561108f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161040a565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192916000805160206114998339815191529101610da2565b6000600382111561113457508060006110ed6002836113bf565b6110f8906001611395565b90505b8181101561112e5790508060028161111381866113bf565b61111d9190611395565b61112791906113bf565b90506110fb565b50919050565b811561113e575060015b919050565b6001600160a01b0382166111995760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161040a565b80600260008282546111ab9190611395565b90915550506001600160a01b03821660008181526020818152604080832080548601905551848152600080516020611499833981519152910160405180910390a35050565b600060208083528351808285015260005b8181101561121d57858101830151858201604001528201611201565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461113e57600080fd5b6000806040838503121561126857600080fd5b6112718361123e565b946020939093013593505050565b60008060006060848603121561129457600080fd5b61129d8461123e565b92506112ab6020850161123e565b9150604084013590509250925092565b6000602082840312156112cd57600080fd5b6112d68261123e565b9392505050565b6000602082840312156112ef57600080fd5b5035919050565b6000806040838503121561130957600080fd5b50508035926020909101359150565b6000806040838503121561132b57600080fd5b6113348361123e565b91506113426020840161123e565b90509250929050565b600181811c9082168061135f57607f821691505b60208210810361112e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561032e5761032e61137f565b808202811582820484141761032e5761032e61137f565b6000826113dc57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561032e5761032e61137f565b6001600160a01b03929092168252602082015260400190565b60006020828403121561141f57600080fd5b815180151581146112d657600080fd5b60208082526025908201527f53696d706c65537761703a20494e53554646494349454e545f494e5055545f416040820152641353d5539560da1b606082015260800190565b6001600160a01b03938416815291909216602082015260408101919091526060019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220d67c29eca59566678c2f16f737564ec3ee263c182bca6b274d2b896f598d1eba64736f6c63430008110033";

type SimpleSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleSwap__factory extends ContractFactory {
  constructor(...args: SimpleSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenA: PromiseOrValue<string>,
    tokenB: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleSwap> {
    return super.deploy(tokenA, tokenB, overrides || {}) as Promise<SimpleSwap>;
  }
  override getDeployTransaction(
    tokenA: PromiseOrValue<string>,
    tokenB: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenA, tokenB, overrides || {});
  }
  override attach(address: string): SimpleSwap {
    return super.attach(address) as SimpleSwap;
  }
  override connect(signer: Signer): SimpleSwap__factory {
    return super.connect(signer) as SimpleSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleSwapInterface {
    return new utils.Interface(_abi) as SimpleSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleSwap {
    return new Contract(address, _abi, signerOrProvider) as SimpleSwap;
  }
}
